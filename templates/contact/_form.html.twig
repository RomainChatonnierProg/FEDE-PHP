{{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}

<div>
    {{ form_row(form.firstname, {'attr': {'class': 'w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
    {{ form_row(form.lastname, {'attr': {'class': 'w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}

    {{ form_row(form.number, {'attr': {'class': 'w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
    {{ form_row(form.mail, {'attr': {'class': 'w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}

    {{ form_row(form.groups, {'attr': {'class': 'w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
    {{ form_row(form.pictureFile, {'attr': {'class': 'w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
</div>

<h3 class="text-lg font-semibold">Custom Fields</h3>
<div id="custom-fields" data-prototype="{{ form_widget(form.customFields.vars.prototype)|e('html_attr') }}">
    {% for field in form.customFields %}
        <div class="mb-4 flex space-x-4">
            {{ form_widget(field.name, {'attr': {'class': 'w-1/2 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
            {{ form_widget(field.value, {'attr': {'class': 'w-1/2 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
        </div>
    {% endfor %}
</div>

<button type="button" id="add-custom-field" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded shadow">
    Add Custom Field
</button>

<div>
    <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded shadow">
        {{ button_label|default('Save') }}
    </button>
</div>


{{ form_end(form) }}

<script>
    document.getElementById('add-custom-field').addEventListener('click', function () {
        const list = document.getElementById('custom-fields');
        const prototype = list.dataset.prototype;
        const index = list.dataset.index || list.children.length;
        const newField = prototype.replace(/__name__/g, index);
        list.dataset.index = parseInt(index) + 1;
        list.insertAdjacentHTML('beforeend', newField);
    });
</script>
